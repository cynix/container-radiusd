prefix = /usr
exec_prefix = ${prefix}
sysconfdir = /etc
localstatedir = /var
sbindir = ${exec_prefix}/sbin
logdir = ${localstatedir}/log/radius
raddbdir = ${sysconfdir}/raddb
radacctdir = ${logdir}/radacct
name = radiusd
confdir = ${raddbdir}
modconfdir = ${confdir}/mods-config
certdir = ${confdir}/certs
cadir = ${certdir}
run_dir = ${localstatedir}/run/${name}
db_dir = ${localstatedir}/lib/radiusd
cachedir = ${localstatedir}/cache/radiusd
libdir = ${prefix}/lib/freeradius
pidfile = ${run_dir}/${name}.pid
correct_escapes = true
max_request_time = 30
cleanup_delay = 5
max_requests = 16384
hostname_lookups = no

log {
    destination = stdout
    colourise = yes
    stripped_names = no
    auth = yes
    auth_badpass = no
    auth_goodpass = no
}

checkrad = ${sbindir}/checkrad

security {
    allow_core_dumps = no
    max_attributes = 200
    reject_delay = 1
    status_server = yes
    allow_vulnerable_openssl = no
}

proxy_requests = no

thread pool {
    start_servers = 3
    max_servers = 32
    min_spare_servers = 2
    max_spare_servers = 8
    max_requests_per_server = 1000
    auto_limit_acct = no
}

modules {
    $INCLUDE mods-enabled/
}

instantiate {
}

policy {
    $INCLUDE policy.d/
}

$INCLUDE client.d/
client_ipaddr = $ENV{RADIUSD_CLIENT_IPADDR}
client_secret = $ENV{RADIUSD_CLIENT_SECRET}

client default {
    ipaddr = ${client_ipaddr}
    secret = ${client_secret}
    require_message_authenticator = yes
}

server default {
    listen {
        type = auth
        ipaddr = *
        port = 0
        limit {
            max_connections = 16
            lifetime = 0
            idle_timeout = 30
        }
    }

    listen {
        type = auth
        ipv6addr = ::
        port = 0
        limit {
            max_connections = 16
            lifetime = 0
            idle_timeout = 30
        }
    }

    authorize {
        preprocess
        eap {
            ok = return
            updated = return
        }
    }

    authenticate {
        eap
    }

    session {
    }

    post-auth {
        update {
            &reply: += &session-state:
        }
        remove_reply_message_if_eap

        Post-Auth-Type REJECT {
            attr_filter.access_reject
            remove_reply_message_if_eap
        }
    }
}
